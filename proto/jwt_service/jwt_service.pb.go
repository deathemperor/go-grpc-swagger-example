// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/jwt_service/jwt_service.proto

package jwt_service

/*
Service Name is JWT

Service Description is one line under service name

*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Annoucement object
type Announcement struct {
	// title of the announcement
	Title                string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Announcement) Reset()         { *m = Announcement{} }
func (m *Announcement) String() string { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()    {}
func (*Announcement) Descriptor() ([]byte, []int) {
	return fileDescriptor_jwt_service_cdae961842f7deaa, []int{0}
}
func (m *Announcement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Announcement.Unmarshal(m, b)
}
func (m *Announcement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Announcement.Marshal(b, m, deterministic)
}
func (dst *Announcement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Announcement.Merge(dst, src)
}
func (m *Announcement) XXX_Size() int {
	return xxx_messageInfo_Announcement.Size(m)
}
func (m *Announcement) XXX_DiscardUnknown() {
	xxx_messageInfo_Announcement.DiscardUnknown(m)
}

var xxx_messageInfo_Announcement proto.InternalMessageInfo

func (m *Announcement) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// Request body
type Request struct {
	// the jwt token
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_jwt_service_cdae961842f7deaa, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Response object
type Response struct {
	// status of response
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// the requested token
	Token                string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_jwt_service_cdae961842f7deaa, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*Announcement)(nil), "jwt_service.Announcement")
	proto.RegisterType((*Request)(nil), "jwt_service.Request")
	proto.RegisterType((*Response)(nil), "jwt_service.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for JWTService service

type JWTServiceClient interface {
	// document for verify method
	Verify(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	// document
	Echo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type jWTServiceClient struct {
	cc *grpc.ClientConn
}

func NewJWTServiceClient(cc *grpc.ClientConn) JWTServiceClient {
	return &jWTServiceClient{cc}
}

func (c *jWTServiceClient) Verify(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/jwt_service.JWTService/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jWTServiceClient) Echo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/jwt_service.JWTService/Echo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JWTService service

type JWTServiceServer interface {
	// document for verify method
	Verify(context.Context, *Request) (*Response, error)
	// document
	Echo(context.Context, *Request) (*Response, error)
}

func RegisterJWTServiceServer(s *grpc.Server, srv JWTServiceServer) {
	s.RegisterService(&_JWTService_serviceDesc, srv)
}

func _JWTService_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServiceServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jwt_service.JWTService/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServiceServer).Verify(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _JWTService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jwt_service.JWTService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServiceServer).Echo(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _JWTService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jwt_service.JWTService",
	HandlerType: (*JWTServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Verify",
			Handler:    _JWTService_Verify_Handler,
		},
		{
			MethodName: "Echo",
			Handler:    _JWTService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/jwt_service/jwt_service.proto",
}

func init() {
	proto.RegisterFile("proto/jwt_service/jwt_service.proto", fileDescriptor_jwt_service_cdae961842f7deaa)
}

var fileDescriptor_jwt_service_cdae961842f7deaa = []byte{
	// 741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0xbb, 0x8e, 0xe3, 0x26, 0x0f, 0xd2, 0xa2, 0x69, 0x08, 0xad, 0x15, 0x94, 0x91, 0x03,
	0xa2, 0x8d, 0xea, 0xd9, 0xc4, 0xcd, 0xa1, 0x32, 0x17, 0x1c, 0x54, 0x95, 0x50, 0x01, 0xc1, 0x54,
	0x80, 0x90, 0x10, 0x1a, 0x8f, 0x5f, 0x76, 0x27, 0x78, 0xe7, 0x2d, 0x33, 0xb3, 0x76, 0x52, 0x84,
	0x90, 0xb8, 0x21, 0x6e, 0x70, 0xe3, 0x5b, 0xf0, 0x39, 0x38, 0x22, 0x71, 0xe2, 0xc0, 0x81, 0x0f,
	0x82, 0x76, 0xbc, 0x4e, 0x6d, 0x47, 0x3d, 0xf4, 0x36, 0xef, 0xbd, 0xdf, 0xfb, 0xcf, 0xcc, 0xff,
	0xcd, 0x2e, 0xec, 0xe6, 0x96, 0x3c, 0xc5, 0x67, 0x13, 0xff, 0x8d, 0x43, 0x3b, 0xd6, 0x0a, 0xe7,
	0xd7, 0x22, 0x54, 0xd9, 0x2b, 0x73, 0xa9, 0xe6, 0xfd, 0x90, 0x53, 0xed, 0x04, 0x4d, 0xdb, 0x4d,
	0x64, 0x92, 0xa0, 0x8d, 0x29, 0xf7, 0x9a, 0x8c, 0x8b, 0xa5, 0x31, 0xe4, 0x65, 0x58, 0x4f, 0x5b,
	0x9b, 0xdb, 0x09, 0x51, 0x32, 0xc2, 0x58, 0xe6, 0xfa, 0x6a, 0xb5, 0xf5, 0x16, 0xbc, 0xda, 0x33,
	0x86, 0x0a, 0xa3, 0x30, 0x43, 0xe3, 0xd9, 0x26, 0xac, 0x7a, 0xed, 0x47, 0x78, 0x3b, 0xe2, 0xd1,
	0xdd, 0xf5, 0xfe, 0x34, 0x68, 0xed, 0xc0, 0xf5, 0x3e, 0x7e, 0x57, 0xa0, 0x9b, 0x02, 0xf4, 0x2d,
	0x9a, 0x4b, 0xa0, 0x0c, 0x5a, 0x0f, 0x61, 0xad, 0x8f, 0x2e, 0x27, 0xe3, 0x90, 0x6d, 0x41, 0xc3,
	0x79, 0xe9, 0x0b, 0x57, 0x21, 0x55, 0xf4, 0xbc, 0xb3, 0x36, 0xd7, 0xd9, 0xf9, 0x23, 0x02, 0xf8,
	0xf0, 0x8b, 0xa7, 0x9f, 0x4d, 0xef, 0xc6, 0x4e, 0xa0, 0xf1, 0x39, 0x5a, 0x7d, 0x7a, 0xc1, 0x36,
	0xc5, 0xbc, 0x0d, 0xd5, 0xf6, 0xcd, 0xd7, 0x97, 0xb2, 0xd3, 0x3d, 0x5b, 0x77, 0x7e, 0xfa, 0xeb,
	0xbf, 0xdf, 0x6a, 0xb7, 0x5a, 0x37, 0xe2, 0xf1, 0x41, 0x69, 0x5f, 0x3c, 0x0e, 0x22, 0xdd, 0x68,
	0x8f, 0x7d, 0x0a, 0xf5, 0x47, 0x2a, 0xa5, 0x97, 0xd3, 0xdb, 0x0e, 0x7a, 0x5b, 0x6c, 0x73, 0xa6,
	0x87, 0x2a, 0xa5, 0xf8, 0xfb, 0x70, 0xe4, 0x1f, 0x8e, 0xfe, 0x6d, 0xfc, 0xda, 0xfb, 0xa7, 0xc1,
	0x7e, 0x89, 0x60, 0xf7, 0x69, 0x8a, 0x3c, 0x78, 0xc4, 0xe9, 0x94, 0xf7, 0x0a, 0x9f, 0xa2, 0xf1,
	0x5a, 0x05, 0x8b, 0x79, 0xa5, 0xda, 0xfa, 0x1a, 0xb6, 0x96, 0x2a, 0xb9, 0xa5, 0x33, 0x54, 0x9e,
	0xdd, 0x4b, 0xbd, 0xcf, 0x5d, 0x37, 0x8e, 0x3d, 0xaa, 0x54, 0x0c, 0x9f, 0x91, 0x41, 0x27, 0xc6,
	0x66, 0x3a, 0xab, 0x85, 0x96, 0xe6, 0xed, 0x11, 0x29, 0xe1, 0x6d, 0x41, 0x26, 0x11, 0x69, 0x51,
	0xbc, 0x77, 0x09, 0x77, 0x56, 0x0f, 0xc4, 0x81, 0xd8, 0xdf, 0x5b, 0x89, 0x6a, 0xf5, 0xce, 0x6b,
	0x32, 0xcf, 0x47, 0x55, 0x4b, 0x7c, 0xe6, 0xc8, 0x74, 0xb6, 0xe6, 0x33, 0xe7, 0xed, 0x53, 0xa2,
	0x76, 0xa6, 0x33, 0xec, 0x5e, 0x21, 0xbb, 0x2f, 0x20, 0xfb, 0x27, 0xb0, 0x72, 0xb8, 0xff, 0x80,
	0x1d, 0xc3, 0xe3, 0x3e, 0xfa, 0xc2, 0x1a, 0x1c, 0xf2, 0x49, 0x8a, 0x86, 0xfb, 0x14, 0x79, 0xe1,
	0xd0, 0xf2, 0x21, 0xa1, 0xe3, 0x86, 0x3c, 0x4f, 0xe5, 0x18, 0x79, 0x8e, 0x36, 0xd3, 0xce, 0x95,
	0xd7, 0xf4, 0xc4, 0xa5, 0x52, 0xe8, 0x5c, 0x60, 0x2d, 0x3a, 0x2a, 0x6c, 0xe9, 0xf2, 0xbb, 0xa5,
	0xe2, 0x21, 0x3b, 0x84, 0xbd, 0xab, 0x8a, 0x33, 0xea, 0xb9, 0x2a, 0x9e, 0x6b, 0xe7, 0x05, 0x6b,
	0x40, 0xfd, 0xf7, 0x5a, 0x74, 0xbd, 0xff, 0x01, 0xac, 0x1c, 0x1e, 0x3c, 0x64, 0x3d, 0xd8, 0x38,
	0x7e, 0x27, 0xe3, 0x92, 0x7b, 0x94, 0x39, 0x79, 0xc1, 0xf6, 0x41, 0x34, 0xef, 0x8b, 0xc4, 0xe6,
	0x4a, 0x24, 0xd2, 0xe3, 0x44, 0x5e, 0x08, 0x3c, 0x97, 0x59, 0x3e, 0x42, 0x37, 0x5b, 0xe4, 0x03,
	0xf1, 0x71, 0x91, 0xa1, 0xd5, 0xea, 0x91, 0x29, 0xb2, 0xaf, 0x7e, 0xae, 0xc1, 0x4d, 0x58, 0x3f,
	0x92, 0x4e, 0xab, 0x72, 0x3e, 0xac, 0xb6, 0x16, 0xc1, 0x9b, 0x00, 0xbd, 0x5c, 0x3f, 0xc1, 0x8b,
	0x90, 0xb9, 0xb9, 0x56, 0x6b, 0xae, 0x7f, 0xd9, 0xee, 0x9d, 0x1c, 0xb7, 0x9f, 0xe0, 0x05, 0xaf,
	0xc1, 0xdf, 0x11, 0x34, 0x3e, 0x29, 0x4b, 0x1d, 0xf6, 0x67, 0xb4, 0xb6, 0x72, 0xb7, 0xde, 0xd9,
	0x9d, 0x8d, 0xb0, 0xda, 0x43, 0x28, 0xca, 0x62, 0x2a, 0x87, 0x17, 0x26, 0x48, 0x56, 0x3f, 0xc3,
	0xee, 0xce, 0x8b, 0xa1, 0xf0, 0xa4, 0x8e, 0x7e, 0x84, 0x26, 0xd4, 0x2d, 0xca, 0x21, 0x63, 0x8f,
	0xad, 0x34, 0xde, 0xf1, 0x32, 0xa8, 0xdc, 0x83, 0x6d, 0x58, 0x9d, 0x58, 0xed, 0x91, 0xdd, 0xaa,
	0x8a, 0x21, 0x9a, 0x55, 0xdf, 0x87, 0x55, 0x39, 0xcc, 0xb4, 0x61, 0xdd, 0x85, 0x56, 0x33, 0x5c,
	0xc0, 0xc2, 0x30, 0x4a, 0x4c, 0x3b, 0x6f, 0xa5, 0xd7, 0x63, 0xe4, 0xda, 0x9c, 0x92, 0xcd, 0xc2,
	0xbc, 0x07, 0x3b, 0xb0, 0x31, 0x6f, 0xc5, 0x35, 0xb8, 0xb1, 0x60, 0xc4, 0xb5, 0xc1, 0x3d, 0x78,
	0xe3, 0xf2, 0xea, 0x1b, 0xd3, 0xb3, 0x56, 0xa7, 0x5a, 0x46, 0xed, 0x11, 0xdc, 0xf9, 0x88, 0x2c,
	0x72, 0x39, 0xa0, 0xc2, 0x2f, 0x7d, 0x14, 0xec, 0xed, 0x99, 0x15, 0x43, 0x52, 0x6e, 0xfe, 0xc9,
	0x2f, 0x60, 0x83, 0x46, 0xf8, 0x3d, 0x3d, 0xf8, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x6a, 0xf8,
	0x9a, 0x1e, 0x05, 0x00, 0x00,
}
